# this file borrowed from https://github.com/NixOS/nixpkgs/blob/b79f5f98fc3e3c698012ed4ccedf9a6bc4fcb777/pkgs/tools/audio/yabridge/hardcode-dependencies.patch
diff --git a/src/common/notifications.cpp b/src/common/notifications.cpp
index 654b6c83..78ba2fe7 100644
--- a/src/common/notifications.cpp
+++ b/src/common/notifications.cpp
@@ -29,8 +29,8 @@
 #include "process.h"
 #include "utils.h"
 
-constexpr char libdbus_library_name[] = "libdbus-1.so.3";
-constexpr char libdbus_library_fallback_name[] = "libdbus-1.so";
+constexpr char libdbus_library_name[] = "@libdbus@/lib/libdbus-1.so.3";
+constexpr char libdbus_library_fallback_name[] = "@libdbus@/lib/libdbus-1.so";
 
 std::atomic<void*> libdbus_handle = nullptr;
 std::mutex libdbus_mutex;
diff --git a/src/plugin/utils.cpp b/src/plugin/utils.cpp
index 441345c6..f3e51cff 100644
--- a/src/plugin/utils.cpp
+++ b/src/plugin/utils.cpp
@@ -103,7 +103,7 @@ std::string PluginInfo::wine_version() const {
     // The '*.exe' scripts generated by winegcc allow you to override the binary
     // used to run Wine, so will will handle this in the same way for our Wine
     // version detection. We'll be using `execvpe`
-    std::string wine_path = "wine";
+    std::string wine_path = "@wine@/bin/wine";
     // NOLINTNEXTLINE(concurrency-mt-unsafe)
     if (const char* wineloader_path = getenv("WINELOADER");
         wineloader_path && access(wineloader_path, X_OK) == 0) {
